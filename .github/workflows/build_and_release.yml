# .github/workflows/build_and_release.yml
---
name: Release XCFramework
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Build XCFramework
    runs-on: macos-latest
    outputs:
      checksum: ${{ steps.compute-checksum.outputs.checksum }}
    steps:
      - name: Store release version tag
      - id: get-version
      - run: echo "::set-output name=version::${GITHUB_REF#refs/*/}"
      - run: echo ${{ steps.get-version.outputs.version }}
      - name: Checkout dali-framework repo
        uses: actions/checkout@v2
        with:
          repository: kaylenmistry/dali-framework
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ steps.get-version.outputs.version }}
      - name: Install the Apple certificate and provisioning profile
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Create Package.swift file
        run: touch Package.swift
      - name: Build device archive
        run: |
          xcodebuild archive \
            -scheme Dali \
            -configuration Release \
            -sdk iphoneos \
            -archivePath 'Dali-iphoneos.xcarchive' \
            SKIP_INSTALL=NO
      - name: Build simulator archive
        run: |
          xcodebuild archive \
            -scheme Dali \
            -configuration Release \
            -sdk iphonesimulator \
            -archivePath 'Dali-iphonesimulator.xcarchive' \
            SKIP_INSTALL=NO
      - name: Create XCFramework
        run: |
          xcodebuild -create-xcframework \
            -framework 'Dali-iphoneos.xcarchive/Products/Library/Frameworks/Dali.framework' \
            -framework 'Dali-iphonesimulator.xcarchive/Products/Library/Frameworks/Dali.framework' \
            -output 'Dali.xcframework'
      - name: Compress XCFramework folder
        run: zip -r Dali.xcframework.zip Dali.xcframework
      - name: Compute checksum of XCFramework artifact
        id: compute-checksum
        run: |
          CHECKSUM=`swift package compute-checksum Dali.xcframework.zip`
          echo "::set-output name=checksum::$CHECKSUM"
      - uses: actions/upload-artifact@v2
        with:
          name: dali-framework
          path: Dali.xcframework.zip
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dali-framework
      - name: Release XCFramework
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: Dali.xcframework.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  distribute:
    name: Open release PR in dali repo
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dali repo
        uses: actions/checkout@v2
        with:
          repository: kaylenmistry/dali
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Setup git config
        run: |
          git config user.name "kaylenmistry"
          git config user.email "kaylenmistry@gmail.com"
      - name: Open Release PR on dali repo
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/*/}
          CHECKSUM=${{ needs.build.outputs.checksum }}
          BRANCH_NAME=release/$RELEASE_VERSION
          git checkout -b $BRANCH_NAME
          sed -Ei 's/(url: "[a-zA-Z0-9.:\/-]+)(v[0-9]+.[0-9]+.[0-9]+)([a-zA-Z0-9.\/-]+")/\1'"$RELEASE_VERSION"'\3/' Package.swift
          sed -Ei 's/(checksum: )("[a-f0-9]+")/\1"'"$CHECKSUM"'"/' Package.swift
          git add .
          git commit -m "Release $RELEASE_VERSION"
          git push --set-upstream origin $BRANCH_NAME